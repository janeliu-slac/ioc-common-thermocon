# Records for THERMOCON.gc AQI
# Macros:
#     DEV - PV basename
#     N   - THERMOCON.gc device index

record(ai, "$(DEV):TEMP_RAW_RBV")
{       
#    field(PINI, "YES")
    field(DESC, "Raw internal sensor temp")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_reg,0)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(FLNK, "$(DEV):TEMP_RBV")
}

# Internal and external temperature is returned as a 2's complement, 16bit
# fixed point representation. The calculation below for TEMP_RBV and
# EXT_TEMP_RBV convert first from a 2's complement UINT to a signed int, and
# then apply the fixed point scaling (0.01deg/lsb). 
record(calc, "$(DEV):TEMP_RBV")
{
    field(DESC, "internal sensor temp in C")
    field(INPA, "$(DEV):TEMP_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "C")
}

record(ai, "$(DEV):EXT_TEMP_RAW_RBV")
{       
#    field(PINI, "YES")
    field(DESC, "Raw external sensor temp")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_reg,1)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(FLNK, "$(DEV):EXT_TEMP_RBV")
}
 
record(calc, "$(DEV):EXT_TEMP_RBV")
{
    field(DESC, "external sensor temp in C")
    field(INPA, "$(DEV):EXT_TEMP_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "C")
}

record(mbbiDirect, "$(DEV):STATUS_RBV")
{       
#    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask(THERMOCON$(N)_read_reg,3,0x0007)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(FLNK, "$(DEV):STATUS_FANOUT")
}

record(fanout, "$(DEV):STATUS_FANOUT")
{
    field(LNK0, "$(DEV):STATUS_RUN_FLAG_RBV")
    field(LNK1, "$(DEV):STATUS_ALARM_FLAG_RBV")
    field(LNK2, "$(DEV):STATUS_WARNING_FLAG_RBV")
}

record(bi, "$(DEV):STATUS_RUN_FLAG_RBV")
{
    field(DESC, "Run status readback")
    field(INP,  "$(DEV):STATUS_RBV.B0 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):STATUS_ALARM_FLAG_RBV")
{
    field(DESC, "Alarm statuses readback")
    field(INP,  "$(DEV):STATUS_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):STATUS_WARNING_FLAG_RBV")
{
    field(DESC, "Warning statuses readback")
    field(INP,  "$(DEV):STATUS_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(mbbiDirect, "$(DEV):ALARM_FLAG_1_RBV")
{       
#    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask(THERMOCON$(N)_read_reg,4,0xF80E)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(FLNK, "$(DEV):ALARM_FLAG_1_FANOUT")
}

record(fanout, "$(DEV):ALARM_FLAG_1_FANOUT")
{
    field(LNK0, "$(DEV):SYSTEM_ERROR_1_RBV")
    field(LNK1, "$(DEV):SYSTEM_ERROR_2_RBV")
    field(LNK2, "$(DEV):BACKUP_DATA_ERR_RBV")
    field(LNK3, "$(DEV):DC_PWR_FAIL_RBV")
    field(LNK4, "$(DEV):INT_HIGH_TEMP_FAIL_RBV")
    field(LNK5, "$(DEV):INT_LOW_TEMP_FAIL_RBV")
    field(LNK6, "$(DEV):THERMOSTAT_RBV")
    field(LNK7, "$(DEV):ABNORMAL_OUT_RBV")
}

record(bi, "$(DEV):SYSTEM_ERROR_1_RBV")
{
    field(DESC, "System error 1")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):SYSTEM_ERROR_2_RBV")
{
    field(DESC, "System error 2")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):BACKUP_DATA_ERR_RBV")
{
    field(DESC, "Backup data error")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.B3 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):DC_PWR_FAIL_RBV")
{
    field(DESC, "DC power supply failure")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.BB NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):INT_HIGH_TEMP_FAIL_RBV")
{
    field(DESC, "Internal High temperature failure")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.BC NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):INT_LOW_TEMP_FAIL_RBV")
{
    field(DESC, "Internal Low temperature failure")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.BD NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):THERMOSTAT_RBV")
{
    field(DESC, "Thermostat alarm")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.BE NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):ABNORMAL_OUT_RBV")
{
    field(DESC, "Abnormal outpt alarm")
    field(INP,  "$(DEV):ALARM_FLAG_1_RBV.BF NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(mbbiDirect, "$(DEV):ALARM_FLAG_2_RBV")
{       
#    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask(THERMOCON$(N)_read_reg,5,0x301F)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(FLNK, "$(DEV):ALARM_FLAG_2_FANOUT")
}

record(fanout, "$(DEV):ALARM_FLAG_2_FANOUT")
{
    field(LNK0, "$(DEV):LOW_FLOW_RBV")
    field(LNK1, "$(DEV):INT_TEMP_SENS_DISCONNECT_RBV")
    field(LNK2, "$(DEV):EXT_TEMP_SENS_DISCONNECT_RBV")
    field(LNK3, "$(DEV):ABNORMAL_AUTO_TUNING_RBV")
    field(LNK4, "$(DEV):LOW_FLUID_RBV")
    field(LNK5, "$(DEV):TEMP_UPPER_LIM_RBV")
    field(LNK6, "$(DEV):TEMP_LOW_LIM_RBV")
}

record(bi, "$(DEV):LOW_FLOW_RBV")
{
    field(DESC, "Low flow rate alarm")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.B0 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):INT_TEMP_SENS_DISCONNECT_RBV")
{
    field(DESC, "Internal temp sensor disconnection alarm")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):EXT_TEMP_SENS_DISCONNECT_RBV")
{
    field(DESC, "External temp sensor disconnetion alarm")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):ABNORMAL_AUTO_TUNING_RBV")
{
    field(DESC, "Abnormal auto tuning alarm")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.B3 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):LOW_FLUID_RBV")
{
    field(DESC, "Low fluid level alarm")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.B4 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):TEMP_UPPER_LIM_RBV")
{
    field(DESC, "Temperature upper limit warning")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.BC NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(DEV):TEMP_LOW_LIM_RBV")
{
    field(DESC, "Temperature lower limit warning")
    field(INP,  "$(DEV):ALARM_FLAG_2_RBV.BD NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(ai, "$(DEV):OUT_RATIO_RAW_RBV")
{       
#    field(PINI, "YES")
    field(DESC, "Raw output ratio data")
    field(SCAN, "1 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_reg,6)UINT16")
    field(VAL,  "0")
    field(FLNK, "$(DEV):OUT_RATIO_RBV")
}
 
record(calc, "$(DEV):OUT_RATIO_RBV")
{
    field(DESC, "Output ratio from -100% to 100%")
    field(INPA, "$(DEV):OUT_RATIO_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536) : A")
    field(EGU,  "%")
}

record(mbbi, "$(DEV):CTRL_OP_RBV")
{
#    field(PINI, "YES")
    field(DESC, "Operation mode read back")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask(THERMOCON$(N)_read_ctrl,0,0xFFFF)UINT16")
    field(SCAN, "1 second")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(ZRST, "Pump stop")
    field(ONST, "Normal operation")
    field(TWST, "Auto tuning start")
    field(THST, "Learning control")
    field(FRST, "Ext. tune control")   
}

record(mbbo, "$(DEV):CTRL_OP_SET")
{
    field(DESC, "Set operation mode")
    field(OMSL, "supervisory")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask(THERMOCON$(N)_set_ctrl,0,0xFFFF)UINT16")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(ZRST, "Pump stop")
    field(ONST, "Normal operation")
    field(TWST, "Auto tuning start")
    field(THST, "Learning control")
    field(FRST, "Ext. tune control")   
}

record(ai, "$(DEV):TARG_TEMP_RAW_RBV")
{
#    field(PINI, "YES")
    field(DESC, "Raw target temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,1)UINT16")
    field(SCAN, "1 second")
    field(FLNK, "$(DEV):TARG_TEMP_RBV")
    field(VAL,  "0")
}

record(calc, "$(DEV):TARG_TEMP_RBV")
{
    field(DESC, "Target temperature in C")
    field(INPA, "$(DEV):TARG_TEMP_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "C")
}

record(ao, "$(DEV):TARG_TEMP_SET")
{
    field(DESC, "Set target temp")
    field(OMSL, "supervisory")
    field(DRVL, "10.00")
    field(DRVH, "60.00")
    field(PREC, "2")
    field(EGU,  "C")
    field(OUT,  "$(DEV):TARG_TEMP_RAW.A PP NMS")
}

record(calcout, "$(DEV):TARG_TEMP_RAW")
{
    field(DESC, "Convert temp to device format")
    field(CALC, "A*100")
    field(OUT,  "$(DEV):TARG_TEMP_RAW_SET PP NMS")
}

record(longout, "$(DEV):TARG_TEMP_RAW_SET")
{
    field(DESC, "send temp in raw format to device")
    field(OMSL, "supervisory")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,1)UINT16")  
}

record(ai, "$(DEV):OFFSET_VALUE_RAW_RBV")
{
    field(DESC, "Raw temp. offset value")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,2)UINT16")
    field(SCAN, "1 second")
    field(FLNK, "$(DEV):OFFSET_VALUE_RBV")
    field(VAL,  "0")
}

record(calc, "$(DEV):OFFSET_VALUE_RBV")
{
    field(DESC, "Temperature Offset value in C")
    field(INPA, "$(DEV):OFFSET_VALUE_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "C")
}

record(ai, "$(DEV):PB_RANGE_RAW_RBV")
{
    field(DESC, "Raw temp. offset value")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,3)UINT16")
    field(SCAN, "1 second")
    field(FLNK, "$(DEV):PB_RANGE_RBV")
    field(VAL,  "0")
}

record(calc, "$(DEV):PB_RANGE_RBV")
{
    field(DESC, "Temperature Offset value in C")
    field(INPA, "$(DEV):PB_RANGE_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "C")
}

record(ai, "$(DEV):I_CONSTANT_RBV")
{
    field(DESC, "I constant for control loop")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,5)UINT16")
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(EGU,  "sec")
}

record(ai, "$(DEV):D_CONSTANT_RAW_RBV")
{
    field(DESC, "Raw D constant for control loop")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,6)UINT16")
    field(SCAN, "1 second")
    field(FLNK, "$(DEV):D_CONSTANT_RBV")
    field(VAL,  "0")
}

record(calc, "$(DEV):D_CONSTANT_RBV")
{
    field(DESC, "D constant for control loop")
    field(INPA, "$(DEV):D_CONSTANT_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536)/100 : A/100")
    field(PREC, "2")
    field(EGU,  "sec")
}

record(ai, "$(DEV):HEAT_OUT_LIMIT_RBV")
{       
    field(DESC, "Heater out limit from 0% to 100%")
    field(SCAN, "1 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,7)UINT16")
    field(VAL,  "0")
    field(EGU,  "%")
}
 
record(ai, "$(DEV):COOL_OUT_LIMIT_RAW_RBV")
{       
    field(DESC, "Raw Cooler out limit")
    field(SCAN, "1 second")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(THERMOCON$(N)_read_ctrl,8)UINT16")
    field(VAL,  "0")
    field(FLNK, "$(DEV):COOL_OUT_LIMIT_RBV")
}
 
record(calc, "$(DEV):COOL_OUT_LIMIT_RBV")
{
    field(DESC, "Cooler out limit from -100% to 0%")
    field(INPA, "$(DEV):COOL_OUT_LIMIT_RAW_RBV PP NMS")
    field(CALC, "A>=32768 ? (A-65536) : A")
    field(EGU,  "%")
}

record(ao, "$(DEV):OFFSET_SET")
{
    field(DESC, "Set Offset value")
    field(OMSL, "supervisory")
    field(DRVL, "-9.99")
    field(DRVH, "9.99")
    field(PREC, "2")
    field(EGU,  "C")
    field(OUT,  "$(DEV):OFFSET_RAW.A PP NMS")
}

record(calcout, "$(DEV):OFFSET_RAW")
{
    field(DESC, "Convert Offset value to device format")
    field(CALC, "A<0 ? A*100+65536 : A*100")
    field(OUT,  "$(DEV):OFFSET_RAW_SET PP NMS")
}

record(longout, "$(DEV):OFFSET_RAW_SET")
{
    field(DESC, "Send Offset value in raw format")
    field(OMSL, "supervisory")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,2)UINT16")
}

record(ao, "$(DEV):PB_RANGE_SET")
{
    field(DESC, "Set PB Range")
    field(OMSL, "supervisory")
    field(DRVL, "0.30")
    field(DRVH, "9.90")
    field(PREC, "2")
    field(EGU,  "C")
    field(OUT,  "$(DEV):PB_RANGE_RAW.A PP NMS")
}

record(calcout, "$(DEV):PB_RANGE_RAW")
{
    field(DESC, "Convert PB range to device format")
    field(CALC, "A*100")
    field(OUT,  "$(DEV):PB_RANGE_RAW_SET PP NMS")
}

record(longout, "$(DEV):PB_RANGE_RAW_SET")
{
    field(DESC, "Send PB range in raw format")
    field(OMSL, "supervisory")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,3)UINT16")
}

record(longout, "$(DEV):I_CONSTANT_SET")
{
    field(DESC, "Send I constant in raw format")
    field(OMSL, "supervisory")
    field(DRVL, "1")
    field(DRVH, "999")
    field(EGU,  "sec")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,5)UINT16")
}

record(ao, "$(DEV):D_CONSTANT_SET")
{
    field(DESC, "Set D Constant")
    field(OMSL, "supervisory")
    field(DRVL, "0.00")
    field(DRVH, "99.90")
    field(PREC, "2")
    field(EGU,  "sec")
    field(OUT,  "$(DEV):D_CONSTANT_RAW.A PP NMS")
}

record(calcout, "$(DEV):D_CONSTANT_RAW")
{
    field(DESC, "Convert D Constant to device format")
    field(CALC, "A*100")
    field(OUT,  "$(DEV):D_CONSTANT_RAW_SET PP NMS")
}

record(longout, "$(DEV):D_CONSTANT_RAW_SET")
{
    field(DESC, "Send D Constant in raw format")
    field(OMSL, "supervisory")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,6)UINT16")
}

record(longout, "$(DEV):HEAT_OUT_LIMIT_SET")
{
    field(DESC, "Send Heat out lim in raw format")
    field(OMSL, "supervisory")
    field(DRVL, "0")
    field(DRVH, "100")
    field(EGU,  "%")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,7)UINT16")
}

record(ao, "$(DEV):COOL_OUT_LIMIT_SET")
{
    field(DESC, "Set Cool output limit")
    field(OMSL, "supervisory")
    field(DRVL, "-100")
    field(DRVH, "0")
    field(PREC, "0")
    field(EGU,  "%")
    field(OUT,  "$(DEV):COOL_OUT_LIM_RAW.A PP NMS")
}

record(calcout, "$(DEV):COOL_OUT_LIM_RAW")
{
    field(DESC, "Convert Cool out limit to device format")
    field(CALC, "A<0 ? A+65536 : A")
    field(OUT,  "$(DEV):COOL_OUT_LIM_RAW_SET PP NMS")
}

record(longout, "$(DEV):COOL_OUT_LIM_RAW_SET")
{
    field(DESC, "Send Cool out limit in raw format")
    field(OMSL, "supervisory")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(THERMOCON$(N)_set_ctrl,8)UINT16")
}
